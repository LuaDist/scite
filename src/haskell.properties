# Define SciTE settings for Haskell.

lexer.*.hs=haskell
filter.hs=Haskell (hs)|*.hs|

# white space
style.haskell.0=fore:#808080
# identifier
style.haskell.1=
# keyword
style.haskell.2=$(colour.keyword),bold
# numbers
style.haskell.3=$(colour.number)
# string
style.haskell.4=$(colour.string)
# character
style.haskell.5=$(colour.char)
# module
style.haskell.7=
# capital
style.haskell.8=
# operator
style.haskell.11=$(colour.operator),bold
# line comment
style.haskell.13=$(colour.code.comment.line),$(font.code.comment.line)
# block comment
style.haskell.14=$(colour.code.comment.box),$(font.code.comment.box)

# keywords for Haskell 98
keywordclass.haskell98=case class data default deriving do else hiding if \
import in infix infixl infixr instance let module \
newtype of then type where forall foreign

# keywords for FFI
keywordclass.ffi=export label dynamic safe threadsafe \
unsafe stdcall ccall prim

keywords.*.hs=$(keywordclass.haskell98)

keywords2.*.hs=$(keywordclass.ffi)
